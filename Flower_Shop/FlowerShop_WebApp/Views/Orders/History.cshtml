@model IEnumerable<FlowerShop_WebApp.Models.Orders.OrderViewModel>
@{
    ViewData["Title"] = "My Orders";
}
@{
    Func<string, string> getStatusBadgeClass = status => status switch
    {
        "Pending" => "bg-warning text-dark",
        "Confirmed" => "bg-info text-dark",
        "Shipping" => "bg-primary",
        "Completed" => "bg-success",
        "Cancelled" => "bg-danger",
        _ => "bg-secondary"
    };
}
<h1 class="mb-4">@ViewData["Title"]</h1>

<div class="card shadow-sm">
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <table class="table table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Order ID</th>
                        <th>Date</th>
                        <th>Total</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td><code>#@order.OrderId.ToString().Substring(0, 8)</code></td>
                            <td>@order.CreatedAt.ToString("g")</td>
                            <td>@order.Total.ToString("N0") VND</td>
                            <td>
                                <span class="badge @getStatusBadgeClass(order.Status) rounded-pill">@order.Status</span>
                            </td>
                            <td>
                                <a asp-action="Details" asp-route-id="@order.OrderId" class="btn btn-sm btn-outline-primary">View Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-info" role="alert">
                You haven't placed any orders yet.
            </div>
        }
    </div>
</div>